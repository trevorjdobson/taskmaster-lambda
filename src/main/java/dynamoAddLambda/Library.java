/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package dynamoAddLambda;

import com.amazonaws.AmazonServiceException;
import com.amazonaws.regions.Regions;
import com.amazonaws.services.dynamodbv2.AmazonDynamoDB;
import com.amazonaws.services.dynamodbv2.AmazonDynamoDBClientBuilder;
import com.amazonaws.services.dynamodbv2.document.DynamoDB;
import com.amazonaws.services.dynamodbv2.datamodeling.*;
import com.amazonaws.services.dynamodbv2.document.Table;
import com.amazonaws.services.dynamodbv2.document.UpdateItemOutcome;
import com.amazonaws.services.dynamodbv2.document.spec.UpdateItemSpec;
import com.amazonaws.services.dynamodbv2.document.utils.ValueMap;
import com.amazonaws.services.dynamodbv2.model.AttributeValue;
import com.amazonaws.services.lambda.runtime.Context;
import com.amazonaws.services.lambda.runtime.LambdaLogger;

import com.google.common.reflect.TypeToken;
import com.google.gson.Gson;
import com.google.gson.JsonObject;


import java.util.*;

public class Library {
    private DynamoDB dynamoDb;
    private String DYNAMODB_TABLE_NAME = "tasks";
    private Regions REGION = Regions.US_EAST_1;

    public Task save(Task task, Context context) {

        Task testTask = new Task(task.getTitle(),task.getDescription(),task.getAssignee());
//        task.setTitle( "Test Title" );
//        task.setDescription( "Test Description" );
//        task.setAssignee("Test Assignee");
//        task.setImgUrl("Test Url");
//        task.setStatus("Test Status");

        final AmazonDynamoDB ddb = AmazonDynamoDBClientBuilder.defaultClient();
        DynamoDBMapper ddbMapper = new DynamoDBMapper(ddb);

        ddbMapper.save(testTask);
            System.out.println(testTask);

        DynamoDB dynamoDB = new DynamoDB(ddb);

        Table table = dynamoDB.getTable("tasks");
        UpdateItemSpec updateItemSpec = new UpdateItemSpec().withPrimaryKey("id", task.getId()).withUpdateExpression("set imgUrl= :u").withValueMap(new ValueMap().withString(":u", "Everything happens all at once."));
        return testTask;
    }


    public UpdatedUrl update(UpdatedUrl updatedUrl , Context context) {

        final AmazonDynamoDB ddb = AmazonDynamoDBClientBuilder.defaultClient();
        DynamoDBMapper ddbMapper = new DynamoDBMapper(ddb);


        DynamoDB dynamoDB = new DynamoDB(ddb);

        Table table = dynamoDB.getTable("tasks");
        UpdateItemSpec updateItemSpec = new UpdateItemSpec().withPrimaryKey("id", updatedUrl.getId()).withUpdateExpression("set imgUrl= :u").withValueMap(new ValueMap().withString(":u", updatedUrl.getNewUrl()));
        UpdateItemOutcome outcome = table.updateItem(updateItemSpec);
        return updatedUrl;
    }


}


